services:
  postgres:
    image: postgres:latest
    container_name: user_management_postgres
    environment:
      POSTGRES_DB: user-management-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - .\volumes\postgres_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:latest
    container_name: user_management_kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=3000
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      timeout: 20s
      retries: 10

  mailhog:
    image: mailhog/mailhog
    container_name: user_management_mailhog
    entrypoint: [ "sh", "-c", "exec MailHog >/dev/null 2>&1" ]
    ports:
      - "1025:1025"
      - "8025:8025"
    logging:
      driver: "none"
    restart: unless-stopped

  auth-service:
    build: ./auth-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user-management-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_MAX_BLOCK_MS: 30000
      SPRING_KAFKA_ADMIN_RETRIES: 10
      SPRING_KAFKA_ADMIN_RETRY_INTERVAL: 1000
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  notification-service:
    build: ./notification-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user-management-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_MAX_BLOCK_MS: 30000
      SPRING_KAFKA_ADMIN_RETRIES: 10
      SPRING_KAFKA_ADMIN_RETRY_INTERVAL: 1000
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

volumes:
  postgres_data: